plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'application'
}

group = 'com.hrothwell'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

mainClassName = "com.hrothwell.anime.Main"

application {
    mainClass.set("com.hrothwell.anime.Main")
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Main-Class': 'com.hrothwell.anime.Main'
        )
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}
dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("com.github.ajalt.clikt:clikt:3.5.0")
    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    implementation("io.ktor:ktor-client-core-jvm:2.1.1")
    implementation("io.ktor:ktor-client-cio-jvm:2.1.1")
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
}

test {
    useJUnitPlatform()
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    build {
        finalizedBy(installDist)
    }
}

// TODO figure out how to make this an executable
//def hostOs = System.getProperty("os.name")
//def nativeTarget = ''
//
//if(hostOs == "Mac OS X"){ nativeTarget = "MacosX64"}
//else if(hostOs == "Linux"){nativeTarget == "LinuxX64"}
//else if(hostOs == "Windows"){nativeTarget == "MingwX64"}
//else{throw GradleException("Host $hostOs is not supported in Kotlin/Native.")}